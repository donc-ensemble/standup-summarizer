"""Initial schema with status column

Revision ID: 6635baf1a963
Revises: 86bf65316808
Create Date: 2025-04-07 04:50:02.313305

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6635baf1a963"
down_revision: Union[str, None] = "86bf65316808"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_summaries_id", table_name="summaries")
    op.drop_index("ix_summaries_job_id", table_name="summaries")
    op.drop_table("summaries")
    op.drop_index("ix_channels_id", table_name="channels")
    op.drop_table("channels")
    op.drop_index("ix_projects_id", table_name="projects")
    op.drop_table("projects")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('projects_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="projects_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_projects_id", "projects", ["id"], unique=False)
    op.create_table(
        "channels",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('channels_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("project_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("label", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("channel_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name="channels_project_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="channels_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_channels_id", "channels", ["id"], unique=False)
    op.create_table(
        "summaries",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("channel_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("job_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "original_filename", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("transcript", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("summary", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "slack_notification_sent", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "status",
            sa.VARCHAR(),
            server_default=sa.text("'pending'::character varying"),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["channel_id"], ["channels.id"], name="summaries_channel_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="summaries_pkey"),
    )
    op.create_index("ix_summaries_job_id", "summaries", ["job_id"], unique=True)
    op.create_index("ix_summaries_id", "summaries", ["id"], unique=False)
    # ### end Alembic commands ###
